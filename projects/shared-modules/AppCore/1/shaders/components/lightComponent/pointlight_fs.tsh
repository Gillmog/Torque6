$input v_color0, v_texcoord0, v_sspos

#include <torque6.tsh>

uniform vec4 singleLightPos;
uniform vec4 singleLightColor;
uniform vec4 singleLightParams;
uniform mat4 u_sceneInvViewProjMat;
uniform vec4 u_camPos;

SAMPLER2D(Texture0, 0); // Depth
SAMPLER2D(Texture1, 1); // Normals
SAMPLER2D(Texture2, 2); // Material Info

#include <lighting.sh>

void main()
{
    // Material Info
    vec4 matInfo = texture2D(Texture2, v_texcoord0);

    // Calc screenspace uvs.
    vec3 sspos          = v_sspos.xyz / v_sspos.w;
    vec2 uv_coords      = toUVSpace( sspos );

    // Surface Info
    Surface surface;
    surface.worldSpacePosition  = getWorldSpacePosition(Texture0, uv_coords, u_sceneInvViewProjMat);
    surface.normal              = decodeNormalUint(texture2D(Texture1, uv_coords).xyz);
    surface.metallic            = matInfo.r;
    surface.roughness           = matInfo.g;

    // View Direction
    vec3 viewDir = normalize(u_camPos.xyz - surface.worldSpacePosition);

    vec3 color = getPointLight(surface, viewDir, singleLightPos.xyz, singleLightColor.xyz, singleLightParams);
    gl_FragColor = vec4(color, 1.0);
}
