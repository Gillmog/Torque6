$input v_texcoord0

#include <torque6.tsh>

SAMPLER2D(Texture0, 0); // Albedo
SAMPLER2D(Texture1, 1); // Material Info
SAMPLER2D(Texture2, 2); // Light Buffer
SAMPLER2D(Texture3, 3); // Ambient Buffer

void main()
{
    // Albedo
    vec3 albedo = decodeRGBE8(texture2D(Texture0, v_texcoord0));

    // Material Parameters
    vec4  matInfo   = texture2D(Texture1, v_texcoord0);
    float metallic  = matInfo.r;
    float roughness = matInfo.g;
    float emissive  = matInfo.a;

    // Calculate surface color based on metallic value.
    vec3 reflectivity   = vec3_splat(metallic);
    reflectivity        = clamp(reflectivity, 0.0, 0.999);
    vec3 surfaceReflect = mix(vec3_splat(0.04), albedo, reflectivity);
    vec3 surfaceColor   = albedo * (vec3_splat(1.0) - reflectivity);

    // Direct Lighting
    vec3 lightColor = texture2D(Texture2, v_texcoord0).rgb;
    vec3 dirLight   = surfaceColor * lightColor;

    // Ambient Lighting
    vec3 ambLight = decodeRGBE8(texture2D(Texture3, v_texcoord0));

    // Output with emissive support
    gl_FragColor = encodeRGBE8((dirLight + ambLight) * (1.0 - emissive) + (albedo * emissive));
}
